openapi: 3.0.0
servers: []
info:
  version: 0.1.26
  title: Opctl API
paths:
  /events/stream:
    get:
      summary: Get an event stream
      description: The connection will be upgraded to use the websocket protocol.
      parameters:
        - name: ack
          in: query
          required: false
          description: When specified, client MUST ack (empty reply) each message before server will send another.
            This enables the client to apply back pressure to the stream
          schema:
            type: boolean
          allowEmptyValue: true
        - name: since
          in: query
          description: Filters events to those occurring on/after the provided instant
          required: false
          schema:
            type: string
            format: date-time
          explode: false
        - name: roots
          in: query
          description: Filters events to those w/ the provided root op ids
          required: false
          schema:
            type: array
            items:
              type: string
          explode: false
      tags:
        - events
      responses:
        '101':
          description: HTTP/1.1 ["Switching Protocols" response status code](https://tools.ietf.org/html/rfc7231#section-6.2.2)
          headers:
            Upgrade:
              schema:
                type: string
                enum:
                  - websocket
            Connection:
              schema:
                type: string
                enum:
                  - Upgrade
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/event'
        '500':
          $ref: '#/components/responses/internalServerError'
        '400':
          $ref: '#/components/responses/badRequest'
  /liveness:
    get:
      summary: Get liveness of node
      tags:
        - liveness
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
        '500':
          $ref: '#/components/responses/internalServerError'
  /ops/starts:
    post:
      summary: Starts an op
      tags:
        - ops
      responses:
        '201':
          description: HTTP/1.1 ["Created" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.2)
          content:
            text/plain:
              schema:
                description: 'The id of the [started] op'
                type: string
        '400':
          $ref: '#/components/responses/badRequest'
        '500':
          $ref: '#/components/responses/internalServerError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/startOpReq'
        required: true
  /ops/kills:
    post:
      summary: Kills an op
      tags:
        - ops
      requestBody:
        content:
          application/json:
            schema:
              required:
                - opId
              properties:
                opId:
                  type: string
              type: object
        required: true
      responses:
        '204':
          description: HTTP/1.1 ["No Content" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.5)
        '400':
          $ref: '#/components/responses/badRequest'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/data/{ref}':
    get:
      summary: Gets data
      tags:
        - data
      parameters:
        - name: ref
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: query
          required: false
          schema:
            type: string
        - name: Range
          description: HTTP/1.1 ["Range" header field](https://tools.ietf.org/html/rfc7233#section-3.1)
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            Accept-Ranges:
              description: HTTP/1.1 ["Accept-Ranges" header field](https://tools.ietf.org/html/rfc7233#section-2.3)
              schema:
                type: string
                enum:
                  - bytes
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
          content:
            application/octet-stream: {}
            multipart/byteranges: {}
            text/plain: {}
            application/json: {}
            application/vnd.opspec.0.1.6.dir+json:
              schema:
                items:
                  properties:
                    path:
                      description: absolute path within dir
                      type: string
                    size:
                      type: integer
                    mode:
                      description: golang [FileMode](https://golang.org/pkg/os/#FileMode)
                      type: integer
                type: array
        '206':
          description: HTTP/1.1 ["Partial Content" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
            Content-Range:
              description: HTTP/1.1 ["Content-Range" header field](https://tools.ietf.org/html/rfc7233#section-4.2)
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
            multipart/byteranges:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '416':
          $ref: '#/components/responses/rangeNotSatisfiable'
        '500':
          $ref: '#/components/responses/internalServerError'
    head:
      summary: Same as GET operation but only returns headers
      tags:
        - data
      parameters:
        - name: ref
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: query
          required: false
          schema:
            type: string
        - name: Range
          description: HTTP/1.1 ["Range" header field](https://tools.ietf.org/html/rfc7233#section-3.1)
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            Accept-Ranges:
              description: HTTP/1.1 ["Accept-Ranges" header field](https://tools.ietf.org/html/rfc7233#section-2.3)
              schema:
                type: string
                enum:
                  - bytes
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
        '206':
          description: HTTP/1.1 ["Partial Content" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
            Content-Range:
              description: HTTP/1.1 ["Content-Range" header field](https://tools.ietf.org/html/rfc7233#section-4.2)
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
            multipart/byteranges:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '416':
          $ref: '#/components/responses/rangeNotSatisfiable'
        '500':
          $ref: '#/components/responses/internalServerError'
  
  '/pkgs/{ref}/contents':
    get:
      deprecated: true
      summary: Lists package contents
      tags:
        - pkgs
      parameters:
        - name: ref
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
          content:
            application/json:
              schema:
                items:
                  properties:
                    path:
                      description: absolute path within pkg
                      type: string
                    size:
                      type: integer
                    mode:
                      description: golang [FileMode](https://golang.org/pkg/os/#FileMode)
                      type: integer
                type: array
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '500':
          $ref: '#/components/responses/internalServerError'
  '/pkgs/{ref}/contents/{path}':
    get:
      deprecated: true
      summary: Gets pkg content at path
      tags:
        - pkgs
      parameters:
        - name: ref
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
        - name: Range
          description: HTTP/1.1 ["Range" header field](https://tools.ietf.org/html/rfc7233#section-3.1)
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            Accept-Ranges:
              description: HTTP/1.1 ["Accept-Ranges" header field](https://tools.ietf.org/html/rfc7233#section-2.3)
              schema:
                type: string
                enum:
                  - bytes
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
          content:
            application/octet-stream: {}
            multipart/byteranges: {}
            text/plain: {}
            application/json: {}
        '206':
          description: HTTP/1.1 ["Partial Content" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
            Content-Range:
              description: HTTP/1.1 ["Content-Range" header field](https://tools.ietf.org/html/rfc7233#section-4.2)
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
            multipart/byteranges:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '416':
          $ref: '#/components/responses/rangeNotSatisfiable'
        '500':
          $ref: '#/components/responses/internalServerError'
    head:
      deprecated: true
      summary: Gets pkg content at path
      tags:
        - pkgs
      parameters:
        - name: ref
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
        - name: Range
          description: HTTP/1.1 ["Range" header field](https://tools.ietf.org/html/rfc7233#section-3.1)
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: HTTP/1.1 ["OK" response status code](https://tools.ietf.org/html/rfc7231#section-6.3.1)
          headers:
            Accept-Ranges:
              description: HTTP/1.1 ["Accept-Ranges" header field](https://tools.ietf.org/html/rfc7233#section-2.3)
              schema:
                type: string
                enum:
                  - bytes
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
        '206':
          description: HTTP/1.1 ["Partial Content" response status code](https://tools.ietf.org/html/rfc7233#section-4.1)
          headers:
            Content-Length:
              description: HTTP/1.1 ["Content-Length" header field](https://tools.ietf.org/html/rfc7230#section-3.3.2)
              schema:
                type: integer
            Content-Range:
              description: HTTP/1.1 ["Content-Range" header field](https://tools.ietf.org/html/rfc7233#section-4.2)
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                type: string
            multipart/byteranges:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/notFound'
        '416':
          $ref: '#/components/responses/rangeNotSatisfiable'
        '500':
          $ref: '#/components/responses/internalServerError'
components:
  responses:
    unauthorized:
      description: HTTP/1.1 ["Unauthorized" response status code](https://tools.ietf.org/html/rfc7235#section-3.1)
      headers:
        WWW-Authenticate:
          description: HTTP/1.1 ["WWW-Authenticate" header](https://tools.ietf.org/html/rfc7235#section-4.1)
          schema:
            type: string
    forbidden:
      description: HTTP/1.1 ["Forbidden" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.3)
    internalServerError:
      description: HTTP/1.1 ["Internal Server Error" response status code](https://tools.ietf.org/html/rfc7231#section-6.6.1)
    badRequest:
      description: HTTP/1.1 ["Bad Request" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.1)
    notFound:
      description: HTTP/1.1 ["Not Found" response status code](https://tools.ietf.org/html/rfc7231#section-6.5.4)
    rangeNotSatisfiable:
      description: HTTP/1.1 ["Range Not Satisfiable" response status code](https://tools.ietf.org/html/rfc7233#section-4.4)
  schemas:
    pullCreds:
      description: credentials used during authentication with the source of the op
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
      type: object
    startOpReqArgs:
      type: object
      description: arguments passed to the op to satisfy inputs
      additionalProperties:
        $ref: '#/components/schemas/value'
    startOpReqOp:
      required:
        - ref
      properties:
        ref:
          type: string
          format: uri-reference
          description: reference to an op
        pullCreds:
          $ref: '#/components/schemas/pullCreds'
      type: object
    startOpReq:
      oneOf:
        - type: object
          properties:
            args:
              $ref: 
                '#/components/schemas/startOpReqArgs'
            op:
              $ref:
                '#/components/schemas/startOpReqOp'
        - type: object
          properties:
            args:
              $ref: 
                '#/components/schemas/startOpReqArgs'
            pkg:
              $ref:
                '#/components/schemas/startOpReqOp'
    value:
      description: a typed value
      oneOf:
        - properties:
            array:
              type: array
              items: {}
        - properties:
            dir:
              description: path
              type: string
        - properties:
            file:
              description: path
              type: string
        - properties:
            number:
              type: number
        - properties:
            object:
              type: object
        - properties:
            socket:
              description: socket address
              type: string
        - properties:
            string:
              type: string
      type: object
    event:
      properties:
        timestamp:
          type: string
          format: dateTime
      oneOf:
        - properties:
            callEndedEvent:
              $ref: '#/components/schemas/callEndedEvent'
        - properties:
            containerExited:
              $ref: '#/components/schemas/containerExitedEvent'
        - properties:
            containerStarted:
              $ref: '#/components/schemas/containerStartedEvent'
        - properties:
            containerStdErrWrittenTo:
              $ref: '#/components/schemas/containerStdErrWrittenToEvent'
        - properties:
            containerStdOutWrittenTo:
              $ref: '#/components/schemas/containerStdOutWrittenToEvent'
        - properties:
            opEnded:
              $ref: '#/components/schemas/opEndedEvent'
        - properties:
            opStarted:
              $ref: '#/components/schemas/opStartedEvent'
        - properties:
            opErred:
              $ref: '#/components/schemas/opErredEvent'
        - properties:
            parallelCallEnded:
              $ref: '#/components/schemas/parallelCallEndedEvent'
        - properties:
            parallelLoopCallEnded:
              $ref: '#/components/schemas/parallelLoopCallEndedEvent'
        - properties:
            serialCallEnded:
              $ref: '#/components/schemas/serialCallEndedEvent'
        - properties:
            serialLoopCallEnded:
              $ref: '#/components/schemas/serialLoopCallEndedEvent'
      type: object
    callEndedEvent:
      properties:
        callId:
          type: string
        error:
          $ref: '#/components/schemas/callEndedEventError'
        rootCallId:
          type: string
        outputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/value'
      type: object
    callEndedEventError:
      properties:
        message:
          type: string
      type: object
    callKilledEvent:
      properties:
        callId:
          type: string
        rootCallId:
          type: string
      type: object
    containerExitedEvent:
      properties:
        imageRef:
          type: string
        exitCode:
          type: integer
        rootOpId:
          type: string
        containerId:
          type: string
        opRef:
          type: string
        outputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/value'
      type: object
    containerStartedEvent:
      properties:
        imageRef:
          type: string
        rootOpId:
          type: string
        containerId:
          type: string
        opRef:
          type: string
      type: object
    containerStdErrWrittenToEvent:
      properties:
        imageRef:
          type: string
        data:
          type: string
          format: binary
        rootOpId:
          type: string
        containerId:
          type: string
        opRef:
          type: string
      type: object
    containerStdOutWrittenToEvent:
      properties:
        imageRef:
          type: string
        data:
          type: string
          format: binary
        rootOpId:
          type: string
        containerId:
          type: string
        opRef:
          type: string
      type: object
    opErredEvent:
      properties:
        rootOpId:
          type: string
        msg:
          type: string
        opId:
          type: string
        opRef:
          type: string
      type: object
    opEndedEvent:
      properties:
        rootOpId:
          type: string
        opId:
          type: string
        opRef:
          type: string
        outcome:
          enum:
            - SUCCEEDED
            - FAILED
            - KILLED
          type: string
        outputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/value'
      type: object
    opStartedEvent:
      properties:
        rootOpId:
          type: string
        opId:
          type: string
        opRef:
          type: string
      type: object
    parallelCallEndedEvent:
      properties:
        rootOpId:
          type: string
        callId:
          type: string
      type: object
    parallelLoopCallEndedEvent:
      properties:
        callId:
          type: string
        error:
          $ref: '#/components/schemas/callEndedEventError'
        rootCallId:
          type: string
        outputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/value'
      type: object
    serialCallEndedEvent:
      properties:
        rootOpId:
          type: string
        callId:
          type: string
        outputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/value'
      type: object
    serialLoopCallEndedEvent:
      properties:
        callId:
          type: string
        error:
          $ref: '#/components/schemas/callEndedEventError'
        rootCallId:
          type: string
        outputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/value'
      type: object