name: build
description: runs ops necessary to go from src to vetted artifact(s)
inputs:
  gitBranch:
    string:
      constraints: { minLength: 1 }
      description: git branch the coverage should be associated with
      default: master
  srcDir:
    dir:
      default: .
      description: directory containing the projects source code
  version:
    string:
      default: 0.0.0
      constraints:
        format: semver
outputs:
  opctlForLinux:
    file:
      description: opctl for linux binary resulting from the build
  srcDir:
    dir:
      description: directory containing the projects source code
run:
  serial:
    - op:
        ref: ../webapp/.opspec/build
        inputs:
          srcDir: $(srcDir)
    # embed webapp in node
    - container:
        cmd:
          - sh
          - -ce
          - |
            echo "installing deps"
            go get github.com/rakyll/statik

            echo "embedding webapp in node"
            statik -src webapp/build -dest cli/cmds/node/create -f
        dirs:
          /go/src/github.com/opctl/opctl: $(srcDir)
        image: { ref: 'golang:1.12.6' }
        workDir: /go/src/github.com/opctl/opctl
    - op:
        ref: ../cli/.opspec/build
        inputs:
          gitBranch:
          srcDir:
          version:
        outputs:
          opctlForLinux:
