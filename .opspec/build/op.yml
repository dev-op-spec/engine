name: build
description: runs ops necessary to go from src to vetted artifact(s)
inputs:
  gitBranch:
    string:
      constraints: { minLength: 1 }
      description: git branch the coverage should be associated with
      default: master
  srcDir:
    dir:
      default: .
      description: directory containing the projects source code
outputs:
  opctlForLinux:
    file:
      description: opctl for linux binary resulting from the build
  srcDir:
    dir:
      description: directory containing the projects source code
run:
  serial:
    - op:
        ref: clean
        inputs:
          srcDir:
        outputs:
          srcDir:
    - op:
        ref: ../webapp/.opspec/build
        inputs: { srcDir: $(srcDir/webapp) }
    # embed webapp in node
    - container:
        cmd:
          - sh
          - -ce
          - |
            echo "installing deps"
            go get github.com/rakyll/statik

            echo "embedding webapp in node"
            statik -src webapp/build -dest node -f
        dirs:
          /go/src/github.com/opctl/opctl: $(srcDir)
        image: { ref: 'golang:1.11.5' }
        workDir: /go/src/github.com/opctl/opctl
    - op:
        pkg: { ref: node/build }
        inputs: { srcDir }
        outputs: { opctlForLinux, srcDir }
