name: release/to-docker-cli
description: releases opctl to [docker hub](https://hub.docker.com/r/opctl/opctl/)
inputs:
  dockerPassword:
    string:
      constraints: { minLength: 1 }
      description: password for docker registry
      isSecret: true
  dockerUsername:
    string:
      constraints: { minLength: 1 }
      description: username for docker registry
  opctlForLinux:
    file:
      description: opctl for linux binary to release. Image tag will be determined via `opctl -v` command. 
run:
  serial:
    - container:
        cmd:
          - sh
          - -ce
          - |
            # construct context
            chmod +x /opctl
            cp /opctl /context/opctl

            # construct version
            echo "opctl -v returned: \$(/opctl -v 2>&1)"
            version=\$(/opctl -v 2>&1)
            echo -n "opctl/opctl:${version}-cli" > /imageName
        image: { ref: 'alpine:3.4' }
        files:
          /opctl: $(opctlForLinux)
          /imageName: $(imageName)
          /entrypoint.sh:
        dirs:
          /context: $(context)
    - op:
        ref: github.com/opspec-pkgs/docker.image.build#2.1.0
        inputs:
          imageName:
          dockerfile: $(/Dockerfile)
          context:
          username: $(dockerUsername)
          password: $(dockerPassword)
          registry: https://docker.io
        outputs:
          imageTar:
    - op:
        ref: github.com/opspec-pkgs/docker.image.push#2.1.0
        inputs:
          imageTar:
          imageName:
          username: $(dockerUsername)
          password: $(dockerPassword)
