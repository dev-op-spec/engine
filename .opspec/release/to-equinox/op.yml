description: runs all ops necessary to cut a release to equinox.io
name: release/to-equinox
inputs:
  equinoxSigningKey:
    string:
      description: signing key for artifacts published to equinox.io
      isSecret: true
  equinoxToken:
    string:
      constraints: { minLength: 1 }
      description: equinox.io auth token
      isSecret: true
  srcDir:
    dir:
      default: .
      description: directory containing the projects source code
  version:
    string:
      constraints: { format: semver }
      description: version of opctl being released
run:
  container:
    cmd:
      - sh
      - -ce
      - |
        echo "installing deps"
        curl -L https://bin.equinox.io/c/mBWdkfai63v/release-tool-stable-linux-amd64.tgz | tar -xzv -C /usr/local/bin

        echo "determining channel"
        case "$(version)" in
          *beta*)
            channel=beta
            ;;
          *alpha*)
            channel=alpha
            ;;
          *)
            channel=stable
            ;;
        esac

        echo "releasing to $channel"
        equinox release \
          --channel="${channel}" \
          --version="$(version)" \
          --platforms="darwin_amd64 linux_amd64 windows_amd64" \
          --app="app_kNrDsPk2bis" \
          --token="$(equinoxToken)" \
          -- -a github.com/opctl/opctl/cli
    dirs:
      /go/src/github.com/opctl/opctl: $(srcDir)
    envVars:
      EQUINOX_SIGNING_KEY: $(equinoxSigningKey)
      CGO_ENABLED: '0'
    image: { ref: 'golang:1.12.6' }
    workDir: /go/src/github.com/opctl/opctl
