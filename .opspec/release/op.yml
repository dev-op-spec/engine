description: performs a release
name: release
inputs:
  dockerPassword:
    string:
      constraints: { minLength: 1 }
      description: password for docker registry
      isSecret: true
  dockerUsername:
    string:
      constraints: { minLength: 1 }
      description: username for docker registry
  equinoxSigningKey:
    string:
      description: signing key for artifacts published to equinox.io
      isSecret: true
  equinoxToken:
    string:
      constraints: { minLength: 1 }
      description: equinox.io auth token
      isSecret: true
  gitBranch:
    string:
      constraints: { minLength: 1 }
      description: git branch the coverage should be associated with
      default: master
  srcDir:
    dir:
      default: .
      description: directory containing the projects source code
  version:
    string:
      constraints: { format: semver }
      description: version of opctl being released
run:
  serial:
    - op:
        pkg: { ref: set-version }
        inputs: { srcDir, version }
        outputs: { srcDir }
    - op:
        pkg: { ref: build }
        inputs: { srcDir, gitBranch }
        outputs: { opctlForLinux, srcDir }
    - parallel:
        - op:
            pkg: { ref: release/to-docker }
            inputs:
              dockerPassword:
              dockerUsername:
              opctlForLinux:
        # @TODO: either remove equinox or figure out how to obtain explicit versions of equinox artifacts.
        # At present, equinox doesn't support downloading explicit versions of artifacts so can't be used for anything
        # requiring the current build artifact such as system testing or publishing to docker.
        - op:
            pkg: { ref: release/to-equinox }
            inputs: { equinoxSigningKey, equinoxToken, srcDir, version }
