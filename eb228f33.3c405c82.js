(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{161:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return a})),t.d(n,"default",(function(){return u}));var r=t(1),o=t(6),c=(t(0),t(169)),i={},l={id:"reference/cli/node",title:"node",description:"## `opctl node create`",source:"@site/docs/reference/cli/node.md",permalink:"/docs/reference/cli/node",editUrl:"https://github.com/opctl/opctl/edit/master/website/docs/reference/cli/node.md",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1604375618,sidebar:"docs",previous:{title:"ls",permalink:"/docs/reference/cli/ls"},next:{title:"op",permalink:"/docs/reference/cli/op"}},a=[{value:"<code>opctl node create</code>",id:"opctl-node-create",children:[{value:"Options",id:"options",children:[]},{value:"Notes",id:"notes",children:[]}]},{value:"<code>opctl node kill</code>",id:"opctl-node-kill",children:[]}],d={rightToc:a},p="wrapper";function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(c.b)(p,Object(r.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"opctl-node-create"},Object(c.b)("inlineCode",{parentName:"h2"},"opctl node create")),Object(c.b)("p",null,"Create an in-process node which inherits current\nstderr/stdout/stdin/PGId (process group id) and blocks until killed."),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"There can be only one node running at a time on a given machine.")),Object(c.b)("h3",{id:"options"},"Options"),Object(c.b)("h4",{id:"--data-dir"},Object(c.b)("inlineCode",{parentName:"h4"},"--data-dir")),Object(c.b)("p",null,"Path of dir used to store node data"),Object(c.b)("h3",{id:"notes"},"Notes"),Object(c.b)("h4",{id:"lockfile"},"lockfile"),Object(c.b)("p",null,"Upon creation, nodes populate a lockfile at ",Object(c.b)("inlineCode",{parentName:"p"},"DATA_DIR/lockfile.pid"),"\ncontaining their PId (process id)."),Object(c.b)("h4",{id:"concurrency"},"concurrency"),Object(c.b)("p",null,"Prior to node creation, if a lockfile exists, the existing lock holder\nwill be liveness tested."),Object(c.b)("p",null,"Only in the event the existing lock holder is dead will creation of a\nnew node occur."),Object(c.b)("h4",{id:"debugging"},"debugging"),Object(c.b)("p",null,"Debugging can be accomplished by running ",Object(c.b)("inlineCode",{parentName:"p"},"node create")," from a terminal\nwhere it's output is easily monitored."),Object(c.b)("h4",{id:"cleanup"},"cleanup"),Object(c.b)("p",null,"During creation, ",Object(c.b)("inlineCode",{parentName:"p"},"DATA_DIR")," will be\ncleaned of any existing events, ops, and temp files/dirs to ensure\nthe created node starts from a clean slate."),Object(c.b)("h2",{id:"opctl-node-kill"},Object(c.b)("inlineCode",{parentName:"h2"},"opctl node kill")),Object(c.b)("p",null,"Kill the running node."))}u.isMDXComponent=!0},169:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return O}));var r=t(0),o=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=o.a.createContext({}),p=function(e){var n=o.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l({},n,{},e)),t},u=function(e){var n=p(e.components);return(o.a.createElement(d.Provider,{value:n},e.children))},s="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),u=p(t),s=r,f=u["".concat(i,".").concat(s)]||u[s]||b[s]||c;return t?o.a.createElement(f,l({ref:n},d,{components:t})):o.a.createElement(f,l({ref:n},d))}));function O(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,i=new Array(c);i[0]=f;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l[s]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<c;d++)i[d]=t[d];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);