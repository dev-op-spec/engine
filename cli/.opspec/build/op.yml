description: builds the cli
name: build
inputs:
  gitBranch:
    string:
      constraints: { minLength: 1 }
      description: git branch the coverage should be associated with
      default: master
  srcDir:
    dir:
      default: ..
      description: directory containing the projects source code
  version:
    string:
      default: 0.0.0
      constraints:
        format: semver
outputs:
  opctlForLinux:
    file:
      description: opctl for linux binary resulting from the build
  srcDir:
    dir:
      description: directory containing the projects source code
run:
  serial:
    - op:
        ref: test
        inputs:
          srcDir: $(srcDir/cli)
        outputs:
          coverprofile:
    - op:
        ref: set-version
        inputs:
          srcDir: $(srcDir/cli)
          version:
    - op:
        ref: github.com/opspec-pkgs/golang.build.bin#1.1.0
        inputs:
          baseImport: github.com/opctl/opctl
          import: github.com/opctl/opctl/cli
          srcDir:
        outputs:
          opctlForLinux: bin
    - op:
        ref: github.com/opspec-pkgs/fs.cp-file#2.0.1
        inputs:
          dst: $(srcDir)
          dstPath: opctl
          src: $(opctlForLinux)
        outputs:
          $(srcDir): dst
    # re-enable once speed issue resolved
    # - op:
    #     ref: ../test/system/opspec
    #     inputs:
    #       srcDir: $(srcDir)
    #       opctlForLinux:
    - op:
        ref: github.com/opspec-pkgs/git.resolve-commit#1.0.2
        inputs: { dotGitDir: $(srcDir/.git) }
        outputs: { gitCommit: commit }
    - op:
        ref: github.com/opspec-pkgs/codecov.upload#1.1.0
        inputs:
          gitBranch:
          gitCommit:
          token: b432a3b8-8220-4c1d-bcee-db76e68d0128
          report: $(coverprofile)
