(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{100:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return d}));var a=r(1),n=r(6),l=(r(0),r(193)),c={sidebar_label:"Index",title:"Call [object]"},o={id:"opspec/reference/structure/op-directory/op/call/index",title:"Call [object]",description:"An object defining a call in an operations call graph.",source:"@site/docs/opspec/reference/structure/op-directory/op/call/index.md",permalink:"/docs/opspec/reference/structure/op-directory/op/call/index",editUrl:"https://github.com/opctl/opctl/edit/master/docs/docs/opspec/reference/structure/op-directory/op/call/index.md",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1586991352,sidebar_label:"Index"},i=[{value:"Properties",id:"properties",children:[{value:"container",id:"container",children:[]},{value:"op",id:"op",children:[]},{value:"parallel",id:"parallel",children:[]},{value:"parallelLoop",id:"parallelloop",children:[]},{value:"serial",id:"serial",children:[]},{value:"serialLoop",id:"serialloop",children:[]},{value:"if",id:"if",children:[]},{value:"name",id:"name",children:[]},{value:"needs",id:"needs",children:[]}]}],p={rightToc:i},b="wrapper";function d(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(l.b)(b,Object(a.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"An object defining a call in an operations call graph."),Object(l.b)("h2",{id:"properties"},"Properties"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"must have exactly one of",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#container"}),"container")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#op"}),"op")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#parallel"}),"parallel")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#parallelloop"}),"parallelLoop")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#serial"}),"serial")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#serialloop"}),"serialLoop")))),Object(l.b)("li",{parentName:"ul"},"may have",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#if"}),"if")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#name"}),"name")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"#needs"}),"needs"))))),Object(l.b)("h3",{id:"container"},"container"),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/opspec/reference/structure/op-directory/op/call/container/index"}),"container-call [object]")," defining a container to run."),Object(l.b)("h3",{id:"op"},"op"),Object(l.b)("p",null,"An ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/opspec/reference/structure/op-directory/op/call/op"}),"op-call [object]")," defining an op to run."),Object(l.b)("h3",{id:"parallel"},"parallel"),Object(l.b)("p",null,"An array of ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/opspec/reference/structure/op-directory/op/call/index"}),"call [object]"),"s defining calls run in parallel (all at once without order)."),Object(l.b)("h3",{id:"parallelloop"},"parallelLoop"),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/opspec/reference/structure/op-directory/op/call/parallel-loop"}),"parallel-loop-call [object]")," defining a call loop in which all iterations happen in parallel (all at once without order)."),Object(l.b)("h3",{id:"serial"},"serial"),Object(l.b)("p",null,"An array of ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/opspec/reference/structure/op-directory/op/call/index"}),"call [object]"),"s defining calls run in serial (one after another in order)."),Object(l.b)("h3",{id:"serialloop"},"serialLoop"),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/opspec/reference/structure/op-directory/op/call/serial-loop"}),"serial-loop-call [object]")," defining a call loop in which each iteration happens in serial (one after another in order)"),Object(l.b)("h3",{id:"if"},"if"),Object(l.b)("p",null,"An array of ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/opspec/reference/structure/op-directory/op/call/predicate"}),"predicate [object]"),"s which must all be true for the call to take place."),Object(l.b)("h3",{id:"name"},"name"),Object(l.b)("p",null,"An ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/opspec/reference/structure/op-directory/op/identifier"}),"identifier [string]")," used to identify the call in UI's or ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"#needs"}),"needs")," of sibling calls."),Object(l.b)("h3",{id:"needs"},"needs"),Object(l.b)("p",null,"An array of ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/opspec/reference/structure/op-directory/op/identifier"}),"identifier [string]"),"s identifying calls needed by the current call. When the named calls are no longer needed (by this or any other call), they will be killed."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"note: needed calls and the current call MUST be children of the same parallel block. If not, the need will be ignored.")),Object(l.b)("h4",{id:"example-needs-integration-test"},"Example Needs (Integration Test)"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"name: integration-test\ndescription: systemUnderTest will be shutdown after 1 second because it's no longer needed.\nrun:\n  parallel:\n    - name: systemUnderTest\n      container:\n        image: {ref: alpine}\n        cmd: [sleep, 100000]\n    - container:\n        image: {ref: alpine}\n        cmd: [sleep, 1]\n      needs:\n        - systemUnderTest\n")))}d.isMDXComponent=!0},193:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return j}));var a=r(0),n=r.n(a);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=n.a.createContext({}),b=function(e){var t=n.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o({},t,{},e)),r},d=function(e){var t=b(e.components);return(n.a.createElement(p.Provider,{value:t},e.children))},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},f=Object(a.forwardRef)((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=b(r),s=a,f=d["".concat(c,".").concat(s)]||d[s]||u[s]||l;return r?n.a.createElement(f,o({ref:t},p,{components:r})):n.a.createElement(f,o({ref:t},p))}));function j(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,c=new Array(l);c[0]=f;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[s]="string"==typeof e?e:a,c[1]=o;for(var p=2;p<l;p++)c[p]=r[p];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"}}]);